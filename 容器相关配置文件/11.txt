
只是替换php容器，调原来阿里云自己的镜像【mysql和nginx还是用原来laradock的】
--------------------------------------------------------------------------------------------------------------------

第一步：在home/www下面编写文件 docker-compose.yml 

version: '3'

services:
  php74:
    container_name: php74-container_6
    image: registry.cn-hangzhou.aliyuncs.com/fengdejiyi/php74:v1
    volumes:
      - /home/www:/var/www
    ports:
      - "9000:9000"
    networks:
      - laradock_backend

networks:
  laradock_backend:
    name: laradock_backend  # 注意此处为 2 个空格 这里要和现有nginx在同一个网络，
    driver: bridge


 ------------------------------------------------------------------------------------------------------

 查看网络方法：docker inspect laradock_nginx_1 【下面laradock_backend就是网络的名称】


          "Networks": {
                "laradock_backend": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": [
                        "nginx",
                        "0e03c8ce8066"
                    ],
                    "NetworkID": "40b41a3a04c365c10dd04c37e1b1bc7d5c0e8a0489cfe96921eb6c271bcb4327",
                    "EndpointID": "05d6ebd361b77bca5980f017d3dc79421341b2d76d8c537946d2c91c1774872e",
                    "Gateway": "172.19.0.1",
                    "IPAddress": "172.19.0.4",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:13:00:04",
                    "DriverOpts": null
                },
                "laradock_frontend": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": [
                        "nginx",
                        "0e03c8ce8066"
                    ],
                    "NetworkID": "b2929c8f87764e5ffa6e107027f1d0ebc021441b46e563ff06520edbd13a5598",
                    "EndpointID": "35d7f17c9bd8f74710a7dcdf5c19df1ec1ca72d6d0d57728b559824e6444f42f",
                    "Gateway": "172.18.0.1",
                    "IPAddress": "172.18.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:12:00:02",
                    "DriverOpts": null
                }
            }




-------------------------------------------------------------------------------------------------------------

启用：新镜像
1 docker pull registry.cn-hangzhou.aliyuncs.com/fengdejiyi/php74:v1 
2 docker-compose up -d

-----------------------------------------------

测试nginx和新的php容器在不在一个网络

Nginx 容器成功通过容器名称 php74-container_6 访问到了 PHP 容器的 IP 地址（172.19.0.5），并且与 PHP 容器的通信正常

ping php74-container_6:9000 进入nginx容器执行了这个
PING php74-container_6:9000 (172.19.0.5): 56 data bytes
64 bytes from 172.19.0.5: seq=0 ttl=64 time=0.063 ms
64 bytes from 172.19.0.5: seq=1 ttl=64 time=0.072 ms
64 bytes from 172.19.0.5: seq=2 ttl=64 time=0.089 ms



----------------------------------------------------------------------------------------
进入nginx容器：都是在容器里完成的这里：

如果不确定配置文件的位置，可以通过以下命令查看
 nginx -t

/etc/nginx/conf.d/upstream.conf  这个里面发现了这个

upstream php-upstream { server php-fpm:9000; }

修改成：

upstream php-upstream {
    server php74-container_6:9000;
}


--------------------------------------------------------------------------------------------

sudo nginx -s reload 重新加载配置文件

docker restart laradock_nginx_1

docker stop 9c2ffdc63ae4 关掉了原来php的容器

over完成！
----------------------------------------------------------------------------------------------
原来的几个容器：

CONTAINER ID   IMAGE                     COMMAND                   CREATED         STATUS        PORTS                                            NAMES

073d1352cadc   registry.cn-hangzhou.aliyuncs.com/fengdejiyi/php74:v1   "docker-php-entrypoi…"   16 hours ago    Up 16 hours   0.0.0.0:9000->9000/tcp    php74-container_6

0e03c8ce8066   laradock_nginx       "/docker-entrypoint.…"   5 months ago    Up 15 hours   0.0.0.0:80-81->80-81/tcp, 0.0.0.0:443->443/tcp    laradock_nginx_1

9c2ffdc63ae4   laradock_php-fpm     "docker-php-entrypoi…"   12 months ago   Up 15 hours   9000/tcp      laradock_php-fpm_1



--------------------------------------------------------------------------------------------------------------------

安装完后应用需要的扩展查看
 php -m | grep swoole
 php -m | grep imagitic
php -m | grep imagtic
php -m | grep imagick
php -m | grep pdo_mysql
php -m | grep gd
--------------------------------------------------------------------------------------------------------------- 

   配置/etc/supervisord文件

   18  vi supervisord.conf 

------------------------------------------------------- 
番外1：

如果需要调整配置
增加备用 PHP-FPM 节点（高可用）
如果你有多个 PHP-FPM 实例，可以在 upstream 块中添加多个节点：

nginx
复制代码
upstream php-upstream {
    server php-fpm:9000;          # 主节点
    server php-fpm-backup:9000;  # 备用节点
}
----------------------------------------------------------------------------------------
番外2：

docker network ls 查看当前所有docker的网络




























